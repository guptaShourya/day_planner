{"version":3,"file":"index.js","sources":["../src/LoginSocialAmazon/index.tsx","../src/LoginSocialFacebook/index.tsx","../src/LoginSocialGoogle/index.tsx","../src/LoginSocialGithub/index.tsx","../src/LoginSocialInstagram/index.tsx","../src/LoginSocialMicrosoft/index.tsx","../src/LoginSocialLinkedin/index.tsx","../src/LoginSocialPinterest/index.tsx","../src/helper/signature.ts","../src/LoginSocialTwitter/index.tsx"],"sourcesContent":["/* eslint-disable camelcase */\n/**\n *\n * LoginSocialAmazon\n *\n */\nimport React, {\n  memo,\n  useEffect,\n  useState,\n  useCallback,\n  useImperativeHandle,\n  forwardRef\n} from 'react'\nimport { IResolveParams, objectType, TypeCrossFunction } from '../'\n\ninterface Props {\n  scope?: string\n  state?: string\n  client_id: string\n  className?: string\n  redirect_uri?: string\n  response_type?: string\n  scope_data?: objectType\n  children?: React.ReactNode\n  onLoginStart?: () => void\n  onLogoutSuccess?: () => void\n  onReject: (reject: string | objectType) => void\n  onResolve: ({ provider, data }: IResolveParams) => void\n}\n\nconst JS_SRC = 'https://assets.loginwithamazon.com/sdk/na/login1.js'\nconst SCRIPT_ID = 'amazon-login'\nconst _window = window as any\n\nexport const LoginSocialAmazon = forwardRef(\n  (\n    {\n      state = '',\n      client_id,\n      className,\n      redirect_uri,\n      scope = 'profile',\n      scope_data = {\n        profile: { essential: true }\n      },\n      response_type = 'token',\n      children,\n      onReject,\n      onResolve,\n      onLogoutSuccess,\n      onLoginStart\n    }: Props,\n    ref: React.Ref<TypeCrossFunction>\n  ) => {\n    const [isLogged, setIsLogged] = useState(false)\n    const [isSdkLoaded, setIsSdkLoaded] = useState(false)\n    const [isProcessing, setIsProcessing] = useState(false)\n\n    useEffect(() => {\n      !isSdkLoaded && load()\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isSdkLoaded])\n\n    const checkIsExistsSDKScript = useCallback(() => {\n      return !!document.getElementById(SCRIPT_ID)\n    }, [])\n\n    const insertScriptGoogle = useCallback(\n      (\n        d: HTMLDocument,\n        s: string = 'script',\n        id: string,\n        jsSrc: string,\n        cb: () => void\n      ) => {\n        const ggScriptTag: any = d.createElement(s)\n        ggScriptTag.id = id\n        ggScriptTag.src = jsSrc\n        ggScriptTag.async = true\n        ggScriptTag.defer = true\n        const scriptNode = document.getElementsByTagName('script')![0]\n        scriptNode &&\n          scriptNode.parentNode &&\n          scriptNode.parentNode.insertBefore(ggScriptTag, scriptNode)\n        ggScriptTag.onload = cb\n      },\n      []\n    )\n\n    const getUserInfo = useCallback(\n      async (res) => {\n        fetch(`https://api.amazon.com/user/profile`, {\n          headers: {\n            Authorization: `Bearer ${res.access_token}`\n          }\n        })\n          .then((data) => data.json())\n          .then((data) => {\n            onResolve({ provider: 'amazon', data: { ...data, ...res } })\n          })\n          .catch((err) => {\n            onReject(err)\n          })\n          .finally(() => {\n            setIsProcessing(false)\n            setIsLogged(true)\n          })\n      },\n      [onReject, onResolve]\n    )\n\n    const handleResponse = useCallback((res: objectType) => getUserInfo(res), [\n      getUserInfo\n    ])\n\n    const handleError = useCallback(\n      (err: objectType | string) => {\n        setIsProcessing(false)\n        onReject(err)\n      },\n      [onReject]\n    )\n\n    const load = useCallback(() => {\n      if (checkIsExistsSDKScript()) {\n        setIsSdkLoaded(true)\n      } else {\n        insertScriptGoogle(document, 'script', SCRIPT_ID, JS_SRC, () => {\n          _window.amazon.Login.setClientId(client_id)\n          setIsSdkLoaded(true)\n        })\n      }\n    }, [checkIsExistsSDKScript, client_id, insertScriptGoogle])\n\n    const onLogin = useCallback(() => {\n      if (isProcessing || !isSdkLoaded) return\n      setIsProcessing(true)\n      if (!_window.amazon) {\n        setIsProcessing(false)\n        load()\n        onReject(\"Google SDK isn't loaded!\")\n      } else {\n        onLoginStart && onLoginStart()\n        _window.amazon.Login.authorize(\n          { scope, scope_data, response_type, redirect_uri, state },\n          (res: objectType) => {\n            if (res.error) handleError(res.error)\n            else handleResponse(res)\n          }\n        )\n      }\n    }, [\n      isProcessing,\n      isSdkLoaded,\n      load,\n      onReject,\n      onLoginStart,\n      scope,\n      scope_data,\n      response_type,\n      redirect_uri,\n      state,\n      handleError,\n      handleResponse\n    ])\n\n    useImperativeHandle(ref, () => ({\n      onLogout: () => {\n        if (isLogged) {\n          setIsLogged(false)\n          _window.amazon.Login.logout()\n          onLogoutSuccess && onLogoutSuccess()\n        } else {\n          console.log('You must login before logout.')\n        }\n      }\n    }))\n\n    return (\n      <div className={className} onClick={onLogin}>\n        {children}\n      </div>\n    )\n  }\n)\n\nexport default memo(LoginSocialAmazon)\n","/* eslint-disable camelcase */\n/**\n *\n * LoginSocialFacebook\n *\n */\nimport React, {\n  forwardRef,\n  memo,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useState\n} from 'react'\nimport { objectType, IResolveParams, TypeCrossFunction } from '../'\n\ninterface Props {\n  appId: string\n  scope?: string\n  state?: boolean\n  xfbml?: boolean\n  cookie?: boolean\n  version?: string\n  language?: string\n  auth_type?: string\n  className?: string\n  isDisabled?: boolean\n  onLoginStart?: () => void\n  onLogoutSuccess?: () => void\n  onReject: (reject: string | objectType) => void\n  onResolve: ({ provider, data }: IResolveParams) => void\n  redirect_uri?: string\n  fieldsProfile?: string\n  response_type?: string\n  return_scopes?: boolean\n  children?: React.ReactNode\n}\n\nconst SDK_URL: string = 'https://connect.facebook.net/en_EN/sdk.js'\nconst SCRIPT_ID: string = 'facebook-jssdk'\nconst _window = window as any\n\nconst LoginSocialFacebook = forwardRef(\n  (\n    {\n      appId,\n      scope = 'email,public_profile',\n      state = true,\n      xfbml = true,\n      cookie = true,\n      version = 'v2.7',\n      language = 'en_EN',\n      auth_type = '',\n      className,\n      onLoginStart,\n      onLogoutSuccess,\n      onReject,\n      onResolve,\n      redirect_uri,\n      fieldsProfile = 'id,first_name,last_name,middle_name,name,name_format,picture,short_name',\n      response_type = 'code',\n      return_scopes = true,\n      children\n    }: Props,\n    ref: React.Ref<TypeCrossFunction>\n  ) => {\n    const [isLogged, setIsLogged] = useState(false)\n    const [isSdkLoaded, setIsSdkLoaded] = useState(false)\n    const [isProcessing, setIsProcessing] = useState(false)\n\n    useEffect(() => {\n      !isSdkLoaded && load()\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isSdkLoaded])\n\n    const insertSDKScript = useCallback(\n      (document: HTMLDocument, cb: () => void) => {\n        const fbScriptTag = document.createElement('script')\n        fbScriptTag.id = SCRIPT_ID\n        fbScriptTag.src = SDK_URL\n        const scriptNode = document.getElementsByTagName('script')![0]\n        scriptNode &&\n          scriptNode.parentNode &&\n          scriptNode.parentNode.insertBefore(fbScriptTag, scriptNode)\n        cb()\n      },\n      []\n    )\n\n    const checkIsExistsSDKScript = useCallback(() => {\n      return !!document.getElementById(SCRIPT_ID)\n    }, [])\n\n    const initFbSDK = useCallback(\n      (config: objectType, document: HTMLDocument) => {\n        const _window = window as any\n        _window.fbAsyncInit = function () {\n          _window.FB && _window.FB.init({ ...config })\n          setIsSdkLoaded(true)\n          let fbRoot = document.getElementById('fb-root')\n          if (!fbRoot) {\n            fbRoot = document.createElement('div')\n            fbRoot.id = 'fb-root'\n            document.body.appendChild(fbRoot)\n          }\n        }\n      },\n      []\n    )\n\n    const getMe = useCallback(\n      (authResponse: objectType) => {\n        _window.FB.api(\n          '/me',\n          { locale: language, fields: fieldsProfile },\n          (me: any) => {\n            setIsLogged(true)\n            setIsProcessing(false)\n            onResolve({\n              provider: 'facebook',\n              data: { ...authResponse, ...me }\n            })\n          }\n        )\n      },\n      [fieldsProfile, language, onResolve]\n    )\n\n    const handleResponse = useCallback(\n      (response: objectType) => {\n        if (response.authResponse) {\n          getMe(response.authResponse)\n        } else {\n          onReject(response)\n        }\n      },\n      [getMe, onReject]\n    )\n\n    const load = useCallback(() => {\n      if (checkIsExistsSDKScript()) {\n        setIsSdkLoaded(true)\n      } else {\n        insertSDKScript(document, () => {\n          initFbSDK(\n            {\n              appId,\n              xfbml,\n              version,\n              state,\n              cookie,\n              redirect_uri,\n              response_type\n            },\n            document\n          )\n        })\n      }\n    }, [\n      state,\n      appId,\n      xfbml,\n      cookie,\n      version,\n      initFbSDK,\n      redirect_uri,\n      response_type,\n      insertSDKScript,\n      checkIsExistsSDKScript\n    ])\n\n    const loginFB = useCallback(() => {\n      if (isProcessing || !isSdkLoaded) return\n      setIsProcessing(true)\n      if (!_window.FB) {\n        setIsProcessing(false)\n        load()\n        onReject(\"Fb isn't loaded!\")\n      } else {\n        onLoginStart && onLoginStart()\n        _window.FB.login(handleResponse, {\n          scope,\n          return_scopes,\n          auth_type\n        })\n      }\n    }, [\n      isProcessing,\n      isSdkLoaded,\n      load,\n      onReject,\n      onLoginStart,\n      handleResponse,\n      scope,\n      return_scopes,\n      auth_type\n    ])\n\n    useImperativeHandle(ref, () => ({\n      onLogout: () => {\n        if (isLogged) {\n          console.log(\n            '🚀 ~ file: index.tsx ~ line 202 ~ useImperativeHandle ~ isLogged',\n            isLogged\n          )\n          setIsLogged(false)\n          onLogoutSuccess && onLogoutSuccess()\n          _window.FB.logout()\n        } else {\n          console.log('You must login before logout.')\n        }\n      }\n    }))\n\n    return (\n      <div className={className} onClick={loginFB}>\n        {children}\n      </div>\n    )\n  }\n)\n\nexport default memo(LoginSocialFacebook)\n","/* eslint-disable camelcase */\n/**\n *\n * LoginSocialGoogle\n *\n */\nimport React, {\n  forwardRef,\n  memo,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useState\n} from 'react'\nimport { objectType, IResolveParams, TypeCrossFunction } from '../'\n\ninterface Props {\n  scope?: string\n  prompt?: string\n  ux_mode?: string\n  client_id: string\n  className?: string\n  login_hint?: string\n  access_type?: string\n  redirect_uri?: string\n  cookie_policy?: string\n  hosted_domain?: string\n  discoveryDocs?: string\n  children?: React.ReactNode\n  onLoginStart?: () => void\n  onLogoutSuccess?: () => void\n  onLogoutFailure?: () => void\n  onReject: (reject: string | objectType) => void\n  fetch_basic_profile?: boolean\n  onResolve: ({ provider, data }: IResolveParams) => void\n}\n\nconst SCOPE = ''\nconst JS_SRC = 'https://apis.google.com/js/api.js'\nconst SCRIPT_ID = 'google-login'\nconst _window = window as any\n\nconst LoginSocialGoogle = forwardRef(\n  (\n    {\n      client_id,\n      scope = 'email profile',\n      prompt = 'select_account',\n      ux_mode,\n      className = '',\n      login_hint = '',\n      access_type = 'online',\n      onLogoutFailure,\n      onLogoutSuccess,\n      onLoginStart,\n      onReject,\n      onResolve,\n      redirect_uri = '/',\n      cookie_policy = 'single_host_origin',\n      hosted_domain = '',\n      discoveryDocs = '',\n      children,\n      fetch_basic_profile = true\n    }: Props,\n    ref: React.Ref<TypeCrossFunction>\n  ) => {\n    const [isLogged, setIsLogged] = useState(false)\n    const [isSdkLoaded, setIsSdkLoaded] = useState(false)\n    const [isProcessing, setIsProcessing] = useState(false)\n\n    useEffect(() => {\n      !isSdkLoaded && load()\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isSdkLoaded])\n\n    const checkIsExistsSDKScript = useCallback(() => {\n      return !!document.getElementById(SCRIPT_ID)\n    }, [])\n\n    const insertScriptGoogle = useCallback(\n      (\n        d: HTMLDocument,\n        s: string = 'script',\n        id: string,\n        jsSrc: string,\n        cb: () => void\n      ) => {\n        const ggScriptTag: any = d.createElement(s)\n        ggScriptTag.id = id\n        ggScriptTag.src = jsSrc\n        ggScriptTag.async = true\n        ggScriptTag.defer = true\n        const scriptNode = document.getElementsByTagName('script')![0]\n        scriptNode &&\n          scriptNode.parentNode &&\n          scriptNode.parentNode.insertBefore(ggScriptTag, scriptNode)\n        ggScriptTag.onload = cb\n      },\n      []\n    )\n\n    const handleResponse = useCallback(\n      (res: objectType) => {\n        setIsLogged(true)\n        setIsProcessing(false)\n        const data: objectType = {}\n        Object.values(res)\n          .filter((item) => typeof item === 'string' || item?.access_token)\n          .forEach((item) => {\n            typeof item === 'string'\n              ? (data.provider_id = item)\n              : Object.entries(item).map(\n                  ([key, value]: any) => (data[key] = value)\n                )\n          })\n        const auth2 = _window.gapi.auth2.getAuthInstance()\n        if (auth2.isSignedIn.get()) {\n          const profile = auth2.currentUser.get().getBasicProfile()\n          data.id = profile.getId()\n          data.name = profile.getName()\n          data.firstName = profile.getGivenName()\n          data.lastName = profile.getFamilyName()\n          data.avatar = profile.getImageUrl()\n          data.email = profile.getEmail()\n        }\n        onResolve({\n          provider: 'google',\n          data\n        })\n      },\n      [onResolve]\n    )\n\n    const handleError = useCallback(\n      (err: objectType | string) => {\n        console.log('🚀 ~ file: index.tsx ~ line 129 ~ err', err)\n        setIsProcessing(false)\n        onReject(err)\n      },\n      [onReject]\n    )\n\n    const load = useCallback(() => {\n      if (checkIsExistsSDKScript()) {\n        setIsSdkLoaded(true)\n      } else {\n        insertScriptGoogle(document, 'script', SCRIPT_ID, JS_SRC, () => {\n          const params = {\n            client_id,\n            cookie_policy,\n            login_hint,\n            hosted_domain,\n            fetch_basic_profile,\n            discoveryDocs,\n            ux_mode,\n            redirect_uri,\n            access_type,\n            scope: SCOPE,\n            immediate: true\n          }\n          _window.gapi.load('auth2', () => {\n            const gapiAuth = _window.gapi.auth2\n            !gapiAuth.getAuthInstance()\n              ? gapiAuth.init(params).then(() => {\n                  setIsSdkLoaded(true)\n                })\n              : onReject('not exist an instance')\n          })\n        })\n      }\n    }, [\n      ux_mode,\n      onReject,\n      client_id,\n      login_hint,\n      access_type,\n      redirect_uri,\n      discoveryDocs,\n      cookie_policy,\n      hosted_domain,\n      insertScriptGoogle,\n      fetch_basic_profile,\n      checkIsExistsSDKScript\n    ])\n\n    const loginGoogle = useCallback(() => {\n      if (isProcessing || !isSdkLoaded) return\n      setIsProcessing(true)\n      if (!_window.gapi) {\n        setIsProcessing(false)\n        load()\n        onReject(\"Google SDK isn't loaded!\")\n      } else {\n        onLoginStart && onLoginStart()\n        const auth2 = _window.gapi.auth2.getAuthInstance()\n        const options = {\n          prompt,\n          scope,\n          ux_mode\n        }\n        auth2.signIn(options).then(handleResponse).catch(handleError)\n      }\n    }, [\n      isProcessing,\n      isSdkLoaded,\n      load,\n      onReject,\n      onLoginStart,\n      prompt,\n      scope,\n      ux_mode,\n      handleResponse,\n      handleError\n    ])\n\n    useImperativeHandle(ref, () => ({\n      onLogout: () => {\n        if (isLogged) {\n          setIsLogged(false)\n          var auth2 = _window.gapi.auth2.getAuthInstance()\n          auth2\n            .signOut()\n            .then(function () {\n              onLogoutSuccess && onLogoutSuccess()\n            })\n            .catch((err: any) => {\n              console.log(err)\n              onLogoutFailure && onLogoutFailure()\n            })\n        } else {\n          console.log('You must login before logout.')\n        }\n      }\n    }))\n\n    return (\n      <div className={className} onClick={loginGoogle}>\n        {children}\n      </div>\n    )\n  }\n)\n\nexport default memo(LoginSocialGoogle)\n","/* eslint-disable camelcase */\n/**\n *\n * LoginSocialGithub\n *\n */\nimport React, {\n  forwardRef,\n  memo,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useState\n} from 'react'\nimport { IResolveParams, objectType, TypeCrossFunction } from '../'\n\ninterface Props {\n  state?: string\n  scope?: string\n  client_id: string\n  className?: string\n  redirect_uri: string\n  client_secret: string\n  allow_signup?: boolean\n  children?: React.ReactNode\n  onLoginStart?: () => void\n  onLogoutSuccess?: () => void\n  onReject: (reject: string | objectType) => void\n  onResolve: ({ provider, data }: IResolveParams) => void\n}\n\nconst GITHUB_URL: string = 'https://github.com'\nconst GITHUB_API_URL: string = 'https://api.github.com/'\nconst PREVENT_CORS_URL: string = 'https://cors.bridged.cc'\n\nexport const LoginSocialGithub = forwardRef(\n  (\n    {\n      state = '',\n      scope = 'repo,gist',\n      client_id,\n      client_secret,\n      className = '',\n      redirect_uri,\n      allow_signup = false,\n      children,\n      onReject,\n      onResolve,\n      onLoginStart,\n      onLogoutSuccess\n    }: Props,\n    ref: React.Ref<TypeCrossFunction>\n  ) => {\n    const [isLogged, setIsLogged] = useState(false)\n    const [isProcessing, setIsProcessing] = useState(false)\n\n    useEffect(() => {\n      const popupWindowURL = new URL(window.location.href)\n      const code = popupWindowURL.searchParams.get('code')\n      const state = popupWindowURL.searchParams.get('state')\n      if (state?.includes('_github') && code) {\n        localStorage.setItem('github', code)\n        window.close()\n      }\n    }, [])\n\n    const getProfile = useCallback(\n      (data) => {\n        fetch(`${PREVENT_CORS_URL}/${GITHUB_API_URL}/user`, {\n          method: 'GET',\n          headers: {\n            Authorization: `token ${data.access_token}`\n          }\n        })\n          .then((res) => res.json())\n          .then((response: any) => {\n            setIsLogged(true)\n            setIsProcessing(false)\n            onResolve({ provider: 'github', data: { ...response, ...data } })\n          })\n          .catch((err) => {\n            setIsProcessing(false)\n            onReject(err)\n          })\n      },\n      [onReject, onResolve]\n    )\n\n    const getAccessToken = useCallback(\n      (code: string) => {\n        const params = {\n          code,\n          state,\n          redirect_uri,\n          client_id,\n          client_secret\n        }\n        const headers = new Headers({\n          'Content-Type': 'application/x-www-form-urlencoded'\n        })\n\n        fetch(`${PREVENT_CORS_URL}/${GITHUB_URL}/login/oauth/access_token`, {\n          method: 'POST',\n          headers,\n          body: new URLSearchParams(params)\n        })\n          .then((response) => response.text())\n          .then((response) => {\n            setIsProcessing(false)\n            const data: objectType = {}\n            const searchParams: any = new URLSearchParams(response)\n            for (const p of searchParams) {\n              data[p[0]] = p[1]\n            }\n            if (data.access_token) getProfile(data)\n            else onReject('no data')\n          })\n          .catch((err) => {\n            setIsProcessing(false)\n            onReject(err)\n          })\n      },\n      [client_id, client_secret, getProfile, onReject, redirect_uri, state]\n    )\n\n    const handlePostMessage = useCallback(\n      async ({ type, code, provider }) =>\n        type === 'code' &&\n        provider === 'github' &&\n        code &&\n        getAccessToken(code),\n      [getAccessToken]\n    )\n\n    const onChangeLocalStorage = useCallback(() => {\n      window.removeEventListener('storage', onChangeLocalStorage, false)\n      const code = localStorage.getItem('github')\n      if (code) {\n        setIsProcessing(true)\n        handlePostMessage({ provider: 'github', type: 'code', code })\n        localStorage.removeItem('instagram')\n      }\n    }, [handlePostMessage])\n\n    const onLogin = useCallback(() => {\n      if (!isProcessing) {\n        onLoginStart && onLoginStart()\n        window.addEventListener('storage', onChangeLocalStorage, false)\n        const oauthUrl = `${GITHUB_URL}/login/oauth/authorize?client_id=${client_id}&scope=${scope}&state=${\n          state + '_github'\n        }&redirect_uri=${redirect_uri}&allow_signup=${allow_signup}`\n        const width = 450\n        const height = 730\n        const left = window.screen.width / 2 - width / 2\n        const top = window.screen.height / 2 - height / 2\n        window.open(\n          oauthUrl,\n          'Github',\n          'menubar=no,location=no,resizable=no,scrollbars=no,status=no, width=' +\n            width +\n            ', height=' +\n            height +\n            ', top=' +\n            top +\n            ', left=' +\n            left\n        )\n      }\n    }, [\n      isProcessing,\n      onLoginStart,\n      onChangeLocalStorage,\n      client_id,\n      scope,\n      state,\n      redirect_uri,\n      allow_signup\n    ])\n\n    useImperativeHandle(ref, () => ({\n      onLogout: () => {\n        if (isLogged) {\n          setIsLogged(false)\n          onLogoutSuccess && onLogoutSuccess()\n        } else {\n          console.log('You must login before logout.')\n        }\n      }\n    }))\n\n    return (\n      <div className={className} onClick={onLogin}>\n        {children}\n      </div>\n    )\n  }\n)\n\nexport default memo(LoginSocialGithub)\n","/* eslint-disable camelcase */\n/**\n *\n * LoginSocialInstagram\n *\n */\nimport React, {\n  forwardRef,\n  memo,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useState\n} from 'react'\nimport { objectType, IResolveParams, TypeCrossFunction } from '../'\n\ninterface Props {\n  scope?: string\n  state?: string\n  client_id: string\n  className?: string\n  client_secret: string\n  redirect_uri: string\n  response_type?: string\n  children?: React.ReactNode\n  onLogoutSuccess?: () => void\n  onLoginStart?: () => void\n  onReject: (reject: string | objectType) => void\n  onResolve: ({ provider, data }: IResolveParams) => void\n}\n\nconst INSTAGRAM_URL = 'https://api.instagram.com'\nconst INSTAGRAM_API_URL = 'https://graph.instagram.com/'\nconst PREVENT_CORS_URL: string = 'https://cors.bridged.cc'\n\nexport const LoginSocialInstagram = forwardRef(\n  (\n    {\n      state = '',\n      client_id,\n      client_secret,\n      className,\n      redirect_uri,\n      scope = 'user_profile,user_media',\n      response_type = 'code',\n      children,\n      onLogoutSuccess,\n      onReject,\n      onResolve,\n      onLoginStart\n    }: Props,\n    ref: React.Ref<TypeCrossFunction>\n  ) => {\n    const [isLogged, setIsLogged] = useState(false)\n    const [isProcessing, setIsProcessing] = useState(false)\n\n    useEffect(() => {\n      const popupWindowURL = new URL(window.location.href)\n      const code = popupWindowURL.searchParams.get('code')\n      const state = popupWindowURL.searchParams.get('state')\n      if (state?.includes('_instagram') && code) {\n        localStorage.setItem('instagram', code)\n        window.close()\n      }\n    }, [])\n\n    const getProfile = useCallback(\n      (data) => {\n        fetch(\n          `${PREVENT_CORS_URL}/${INSTAGRAM_API_URL}/me?fields=id,username,account_type,media_count&access_token=${data.access_token}`,\n          {\n            method: 'GET'\n          }\n        )\n          .then((res) => res.json())\n          .then((res) => {\n            setIsLogged(true)\n            setIsProcessing(false)\n            onResolve({ provider: 'instagram', data: { ...res, ...data } })\n          })\n          .catch((err) => {\n            setIsProcessing(false)\n            onReject(err)\n          })\n      },\n      [onReject, onResolve]\n    )\n\n    const getAccessToken = useCallback(\n      (code: string) => {\n        const params = {\n          grant_type: 'authorization_code',\n          code,\n          redirect_uri,\n          client_id,\n          client_secret\n        }\n        const headers = new Headers({\n          'Content-Type': 'application/x-www-form-urlencoded'\n        })\n        fetch(`${PREVENT_CORS_URL}/${INSTAGRAM_URL}/oauth/access_token`, {\n          method: 'POST',\n          headers,\n          body: new URLSearchParams(params)\n        })\n          .then((response) => response.json())\n          .then((data) => {\n            if (data.access_token) getProfile(data)\n            else onReject('no data')\n          })\n          .catch((err) => {\n            onReject(err)\n          })\n          .finally(() => {\n            setIsProcessing(false)\n          })\n      },\n      [client_id, client_secret, getProfile, onReject, redirect_uri]\n    )\n\n    const handlePostMessage = useCallback(\n      async ({ type, code, provider }) =>\n        type === 'code' &&\n        provider === 'instagram' &&\n        code &&\n        getAccessToken(code),\n      [getAccessToken]\n    )\n\n    const onChangeLocalStorage = useCallback(() => {\n      window.removeEventListener('storage', onChangeLocalStorage, false)\n      const code = localStorage.getItem('instagram')\n      if (code) {\n        setIsProcessing(true)\n        handlePostMessage({ provider: 'instagram', type: 'code', code })\n        localStorage.removeItem('instagram')\n      }\n    }, [handlePostMessage])\n\n    const onLogin = useCallback(() => {\n      if (!isProcessing) {\n        onLoginStart && onLoginStart()\n        window.addEventListener('storage', onChangeLocalStorage, false)\n        const oauthUrl = `${INSTAGRAM_URL}/oauth/authorize?response_type=${response_type}&client_id=${client_id}&scope=${scope}&state=${\n          state + '_instagram'\n        }&redirect_uri=${redirect_uri}`\n        const width = 450\n        const height = 730\n        const left = window.screen.width / 2 - width / 2\n        const top = window.screen.height / 2 - height / 2\n        window.open(\n          oauthUrl,\n          'Instagram',\n          'menubar=no,location=no,resizable=no,scrollbars=no,status=no, width=' +\n            width +\n            ', height=' +\n            height +\n            ', top=' +\n            top +\n            ', left=' +\n            left\n        )\n      }\n    }, [\n      isProcessing,\n      onLoginStart,\n      onChangeLocalStorage,\n      response_type,\n      client_id,\n      scope,\n      state,\n      redirect_uri\n    ])\n\n    useImperativeHandle(ref, () => ({\n      onLogout: () => {\n        if (isLogged) {\n          setIsLogged(false)\n          onLogoutSuccess && onLogoutSuccess()\n        } else {\n          console.log('You must login before logout.')\n        }\n      }\n    }))\n\n    return (\n      <div className={className} onClick={onLogin}>\n        {children}\n      </div>\n    )\n  }\n)\n\nexport default memo(LoginSocialInstagram)\n","/* eslint-disable camelcase */\n/**\n *\n * LoginSocialMicrosoft\n *\n */\nimport React, {\n  forwardRef,\n  memo,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useState\n} from 'react'\nimport { IResolveParams, objectType, TypeCrossFunction } from '../'\n\ninterface Props {\n  scope?: string\n  state?: string\n  client_id: string\n  className?: string\n  redirect_uri: string\n  response_type?: string\n  response_mode?: string\n  code_challenge?: string\n  children?: React.ReactNode\n  onLoginStart?: () => void\n  onLogoutSuccess?: () => void\n  onReject: (reject: string | objectType) => void\n  code_challenge_method?: 'plain' | 's256'[]\n  onResolve: ({ provider, data }: IResolveParams) => void\n  tenant?: 'common' | 'organizations' | 'consumers'\n  prompt?: 'login' | 'none' | 'consent' | 'select_account'\n}\n\nconst MICROSOFT_URL = 'https://login.microsoftonline.com'\nconst MICROSOFT_API_URL = 'https://graph.microsoft.com'\n// const PREVENT_CORS_URL: string = 'https://cors.bridged.cc'\n\nexport const LoginSocialMicrosoft = forwardRef(\n  (\n    {\n      tenant = 'common',\n      state = '',\n      client_id,\n      className,\n      redirect_uri,\n      scope = 'profile openid email',\n      response_type = 'code',\n      response_mode = 'query',\n      children,\n      code_challenge = '19cfc47c216dacba8ca23eeee817603e2ba34fe0976378662ba31688ed302fa9',\n      code_challenge_method = 'plain',\n      prompt = 'select_account',\n      onLogoutSuccess,\n      onLoginStart,\n      onReject,\n      onResolve\n    }: Props,\n    ref: React.Ref<TypeCrossFunction>\n  ) => {\n    const [isLogged, setIsLogged] = useState(false)\n    const [isProcessing, setIsProcessing] = useState(false)\n\n    useEffect(() => {\n      const popupWindowURL = new URL(window.location.href)\n      const code = popupWindowURL.searchParams.get('code')\n      const state = popupWindowURL.searchParams.get('state')\n      if (state?.includes('_microsoft') && code) {\n        localStorage.setItem('microsoft', code)\n        window.close()\n      }\n    }, [])\n\n    const getProfile = useCallback(\n      (data) => {\n        fetch(`${MICROSOFT_API_URL}/v1.0/me`, {\n          method: 'GET',\n          headers: {\n            Authorization: `Bearer ${data.access_token}`\n          }\n        })\n          .then((res) => res.json())\n          .then((res) => {\n            setIsProcessing(false)\n            setIsLogged(true)\n            onResolve({ provider: 'microsoft', data: { ...res, ...data } })\n          })\n          .catch((err) => {\n            setIsProcessing(false)\n            onReject(err)\n          })\n      },\n      [onReject, onResolve]\n    )\n\n    const getAccessToken = useCallback(\n      (code: string) => {\n        const params = {\n          code,\n          scope,\n          client_id,\n          redirect_uri,\n          code_verifier: code_challenge,\n          grant_type: 'authorization_code'\n        }\n        const headers = new Headers({\n          'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n        })\n        fetch(`${MICROSOFT_URL}/${tenant}/oauth2/v2.0/token`, {\n          method: 'POST',\n          headers,\n          body: new URLSearchParams(params)\n        })\n          .then((response) => response.json())\n          .then((data) => {\n            if (data.access_token) getProfile(data)\n            else {\n              setIsProcessing(false)\n              onReject('no data')\n            }\n          })\n          .catch((err) => {\n            setIsProcessing(false)\n            onReject(err)\n          })\n      },\n      [\n        scope,\n        tenant,\n        onReject,\n        client_id,\n        getProfile,\n        redirect_uri,\n        code_challenge\n      ]\n    )\n\n    const handlePostMessage = useCallback(\n      async ({ type, code, provider }) =>\n        type === 'code' &&\n        provider === 'microsoft' &&\n        code &&\n        getAccessToken(code),\n      [getAccessToken]\n    )\n\n    const onChangeLocalStorage = useCallback(() => {\n      window.removeEventListener('storage', onChangeLocalStorage, false)\n      const code = localStorage.getItem('microsoft')\n      if (code) {\n        setIsProcessing(true)\n        handlePostMessage({ provider: 'microsoft', type: 'code', code })\n        localStorage.removeItem('microsoft')\n      }\n    }, [handlePostMessage])\n\n    const onLogin = useCallback(() => {\n      if (!isProcessing) {\n        onLoginStart && onLoginStart()\n        window.addEventListener('storage', onChangeLocalStorage, false)\n        const oauthUrl = `${MICROSOFT_URL}/${tenant}/oauth2/v2.0/authorize?client_id=${client_id}\n        &response_type=${response_type}\n        &redirect_uri=${redirect_uri}\n        &response_mode=${response_mode}\n        &scope=${scope}\n        &state=${state + '_microsoft'}\n        &prompt=${prompt}\n        &code_challenge=${code_challenge}\n        &code_challenge_method=${code_challenge_method}`\n        const width = 450\n        const height = 730\n        const left = window.screen.width / 2 - width / 2\n        const top = window.screen.height / 2 - height / 2\n        window.open(\n          oauthUrl,\n          'Microsoft',\n          'menubar=no,location=no,resizable=no,scrollbars=no,status=no, width=' +\n            width +\n            ', height=' +\n            height +\n            ', top=' +\n            top +\n            ', left=' +\n            left\n        )\n      }\n    }, [\n      isProcessing,\n      onLoginStart,\n      onChangeLocalStorage,\n      tenant,\n      client_id,\n      response_type,\n      redirect_uri,\n      response_mode,\n      scope,\n      state,\n      prompt,\n      code_challenge,\n      code_challenge_method\n    ])\n\n    useImperativeHandle(ref, () => ({\n      onLogout: () => {\n        if (isLogged) {\n          setIsLogged(false)\n          onLogoutSuccess && onLogoutSuccess()\n        } else {\n          console.log('You must login before logout.')\n        }\n      }\n    }))\n\n    return (\n      <div className={className} onClick={onLogin}>\n        {children}\n      </div>\n    )\n  }\n)\n\nexport default memo(LoginSocialMicrosoft)\n","/* eslint-disable camelcase */\n/**\n *\n * LoginSocialLinkedin\n *\n */\nimport React, {\n  forwardRef,\n  memo,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useState\n} from 'react'\nimport { IResolveParams, objectType, TypeCrossFunction } from '../'\n\ninterface Props {\n  state?: string\n  scope?: string\n  client_id: string\n  className?: string\n  redirect_uri: string\n  client_secret: string\n  response_type?: string\n  children?: React.ReactNode\n  onLoginStart?: () => void\n  onLogoutSuccess?: () => void\n  onReject: (reject: string | objectType) => void\n  onResolve: ({ provider, data }: IResolveParams) => void\n}\n\nconst LINKEDIN_URL: string = 'https://www.linkedin.com/oauth/v2'\nconst LINKEDIN_API_URL: string = 'https://api.linkedin.com'\nconst PREVENT_CORS_URL: string = 'https://cors.bridged.cc'\n\nexport const LoginSocialLinkedin = forwardRef(\n  (\n    {\n      state = '',\n      scope = 'r_liteprofile',\n      client_id,\n      client_secret,\n      className = '',\n      redirect_uri,\n      response_type = 'code',\n      children,\n      onLoginStart,\n      onLogoutSuccess,\n      onReject,\n      onResolve\n    }: Props,\n    ref: React.Ref<TypeCrossFunction>\n  ) => {\n    const [isLogged, setIsLogged] = useState(false)\n    const [isProcessing, setIsProcessing] = useState(false)\n\n    useEffect(() => {\n      const popupWindowURL = new URL(window.location.href)\n      const code = popupWindowURL.searchParams.get('code')\n      const state = popupWindowURL.searchParams.get('state')\n      if (state?.includes('_linkedin') && code) {\n        localStorage.setItem('linkedin', code)\n        window.close()\n      }\n    }, [])\n\n    const getProfile = useCallback(\n      (data) => {\n        fetch(\n          `https://api.allorigins.win/get?url=${encodeURIComponent(\n            LINKEDIN_API_URL +\n              '/v2/me?oauth2_access_token=' +\n              data.access_token +\n              '&projection=(id,profilePicture(displayImage~digitalmediaAsset:playableStreams),localizedLastName, firstName,lastName,localizedFirstName)'\n          )}`,\n          {\n            method: 'GET'\n          }\n        )\n          .then((res) => res.json())\n          .then((res) => {\n            const response = { ...data }\n            if (res.contents) {\n              const contents = JSON.parse(res.contents)\n              if (typeof data === 'object')\n                Object.entries(contents).map(([key, value]) => {\n                  response[key] = value\n                })\n            }\n            setIsLogged(true)\n            setIsProcessing(false)\n            onResolve({ provider: 'linkedin', data: response })\n          })\n          .catch((err) => {\n            setIsProcessing(false)\n            onReject(err)\n          })\n      },\n      [onReject, onResolve]\n    )\n\n    const getAccessToken = useCallback(\n      (code: string) => {\n        const params = {\n          code,\n          grant_type: 'authorization_code',\n          redirect_uri,\n          client_id,\n          client_secret\n        }\n        const headers = new Headers({\n          'Content-Type': 'application/x-www-form-urlencoded'\n        })\n\n        fetch(`${PREVENT_CORS_URL}/${LINKEDIN_URL}/accessToken`, {\n          method: 'POST',\n          headers,\n          body: new URLSearchParams(params)\n        })\n          .then((response) => response.json())\n          .then((response) => {\n            getProfile(response)\n          })\n          .catch((err) => {\n            setIsProcessing(false)\n            onReject(err)\n          })\n      },\n      [client_id, client_secret, getProfile, onReject, redirect_uri]\n    )\n\n    const handlePostMessage = useCallback(\n      async ({ type, code, provider }) =>\n        type === 'code' &&\n        provider === 'linkedin' &&\n        code &&\n        getAccessToken(code),\n      [getAccessToken]\n    )\n\n    const onChangeLocalStorage = useCallback(() => {\n      window.removeEventListener('storage', onChangeLocalStorage, false)\n      const code = localStorage.getItem('linkedin')\n      if (code) {\n        setIsProcessing(true)\n        handlePostMessage({ provider: 'linkedin', type: 'code', code })\n        localStorage.removeItem('linkedin')\n      }\n    }, [handlePostMessage])\n\n    const onLogin = useCallback(() => {\n      if (!isProcessing) {\n        onLoginStart && onLoginStart()\n        window.addEventListener('storage', onChangeLocalStorage, false)\n        const oauthUrl = `${LINKEDIN_URL}/authorization?response_type=${response_type}&client_id=${client_id}&scope=${scope}&state=${\n          state + '_linkedin'\n        }&redirect_uri=${redirect_uri}`\n        const width = 450\n        const height = 730\n        const left = window.screen.width / 2 - width / 2\n        const top = window.screen.height / 2 - height / 2\n        window.open(\n          oauthUrl,\n          'Linkedin',\n          'menubar=no,location=no,resizable=no,scrollbars=no,status=no, width=' +\n            width +\n            ', height=' +\n            height +\n            ', top=' +\n            top +\n            ', left=' +\n            left\n        )\n      }\n    }, [\n      isProcessing,\n      onLoginStart,\n      onChangeLocalStorage,\n      response_type,\n      client_id,\n      scope,\n      state,\n      redirect_uri\n    ])\n\n    useImperativeHandle(ref, () => ({\n      onLogout: () => {\n        if (isLogged) {\n          setIsLogged(false)\n          onLogoutSuccess && onLogoutSuccess()\n        } else {\n          console.log('You must login before logout.')\n        }\n      }\n    }))\n\n    return (\n      <div className={className} onClick={onLogin}>\n        {children}\n      </div>\n    )\n  }\n)\n\nexport default memo(LoginSocialLinkedin)\n","/* eslint-disable camelcase */\n/**\n *\n * LoginSocialGithub\n *\n */\nimport React, {\n  forwardRef,\n  memo,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useState\n} from 'react'\nimport { IResolveParams, objectType, TypeCrossFunction } from '..'\n\ninterface Props {\n  state?: string\n  scope?: string\n  client_id: string\n  client_secret: string\n  className?: string\n  redirect_uri: string\n  children?: React.ReactNode\n  onLoginStart?: () => void\n  onLogoutSuccess?: () => void\n  onReject: (reject: string | objectType) => void\n  onResolve: ({ provider, data }: IResolveParams) => void\n}\n\nconst PINTEREST_URL: string = 'https://www.pinterest.com/oauth'\nconst PINTEREST_URL_API: string = 'https://api.pinterest.com/v5'\nconst PREVENT_CORS_URL: string = 'https://cors.bridged.cc'\n\nexport const LoginSocialPinterest = forwardRef(\n  (\n    {\n      state = '',\n      scope = '',\n      client_id,\n      client_secret,\n      className = '',\n      redirect_uri,\n      children,\n      onLoginStart,\n      onLogoutSuccess,\n      onReject,\n      onResolve\n    }: Props,\n    ref: React.Ref<TypeCrossFunction>\n  ) => {\n    const [isLogged, setIsLogged] = useState(false)\n    const [isProcessing, setIsProcessing] = useState(false)\n\n    useEffect(() => {\n      const popupWindowURL = new URL(window.location.href)\n      const code = popupWindowURL.searchParams.get('code')\n      const state = popupWindowURL.searchParams.get('state')\n      if (state?.includes('_pinterest') && code) {\n        localStorage.setItem('pinterest', code)\n        window.close()\n      }\n    }, [])\n\n    const getProfile = useCallback(\n      (data) => {\n        fetch(`${PREVENT_CORS_URL}/${PINTEREST_URL_API}/user_account`, {\n          method: 'GET',\n          headers: {\n            Authorization: `Bearer ${data.access_token}`\n          }\n        })\n          .then((res) => res.json())\n          .then((res) => {\n            setIsLogged(true)\n            setIsProcessing(false)\n            onResolve({ provider: 'pinterest', data: { ...data, ...res } })\n          })\n          .catch((err) => onReject(err))\n      },\n      [onReject, onResolve]\n    )\n\n    const getAccessToken = useCallback(\n      async (code: string) => {\n        var details = {\n          code,\n          redirect_uri,\n          grant_type: `authorization_code`\n        }\n        var formBody: string | string[] = []\n        for (var property in details) {\n          var encodedKey = encodeURIComponent(property)\n          var encodedValue = encodeURIComponent(details[property])\n          formBody.push(encodedKey + '=' + encodedValue)\n        }\n        formBody = formBody.join('&')\n\n        const data = await fetch(\n          `${PREVENT_CORS_URL}/${PINTEREST_URL_API}/oauth/token`,\n          {\n            method: 'POST',\n            headers: {\n              Authorization: `Basic ${btoa(client_id + ':' + client_secret)}`,\n              'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: formBody\n          }\n        )\n          .then((data) => data.json())\n          .catch((err) => onReject(err))\n\n        getProfile(data)\n      },\n      [client_id, client_secret, getProfile, onReject, redirect_uri]\n    )\n\n    const handlePostMessage = useCallback(\n      async ({ type, code, provider }) =>\n        type === 'code' &&\n        provider === 'pinterest' &&\n        code &&\n        getAccessToken(code),\n      [getAccessToken]\n    )\n\n    const onChangeLocalStorage = useCallback(() => {\n      window.removeEventListener('storage', onChangeLocalStorage, false)\n      const code = localStorage.getItem('pinterest')\n      if (code) {\n        setIsProcessing(true)\n        handlePostMessage({ provider: 'pinterest', type: 'code', code })\n        localStorage.removeItem('pinterest')\n      }\n    }, [handlePostMessage])\n\n    const onLogin = useCallback(() => {\n      if (!isProcessing) {\n        onLoginStart && onLoginStart()\n        window.addEventListener('storage', onChangeLocalStorage, false)\n        const oauthUrl = `${PINTEREST_URL}/?client_id=${client_id}&scope=${scope}&state=${\n          state + '_pinterest'\n        }&redirect_uri=${redirect_uri}&response_type=code&scope=boards:read,pins:read,user_accounts:read`\n        const width = 450\n        const height = 730\n        const left = window.screen.width / 2 - width / 2\n        const top = window.screen.height / 2 - height / 2\n        window.open(\n          oauthUrl,\n          'Pinterest',\n          'menubar=no,location=no,resizable=no,scrollbars=no,status=no, width=' +\n            width +\n            ', height=' +\n            height +\n            ', top=' +\n            top +\n            ', left=' +\n            left\n        )\n      }\n    }, [\n      isProcessing,\n      onLoginStart,\n      onChangeLocalStorage,\n      client_id,\n      scope,\n      state,\n      redirect_uri\n    ])\n\n    useImperativeHandle(ref, () => ({\n      onLogout: () => {\n        if (isLogged) {\n          setIsLogged(false)\n          onLogoutSuccess && onLogoutSuccess()\n        } else {\n          console.log('You must login before logout.')\n        }\n      }\n    }))\n\n    return (\n      <div className={className} onClick={onLogin}>\n        {children}\n      </div>\n    )\n  }\n)\n\nexport default memo(LoginSocialPinterest)\n","/* eslint-disable camelcase */\nimport { HmacSHA1, enc } from 'crypto-js'\n\ninterface RequestTokenResponse {\n  oauth_token: string\n  oauth_token_secret: string\n  oauth_callback_confirmed?: string\n}\n\nexport const requestTokenSignature = ({\n  method,\n  apiUrl,\n  callbackUrl,\n  consumerKey,\n  consumerSecret\n}: {\n  method: string\n  apiUrl: string\n  callbackUrl: string\n  consumerKey: string\n  consumerSecret: string\n}) => {\n  const params = {\n    oauth_consumer_key: consumerKey,\n    oauth_version: '1.0',\n    oauth_signature_method: 'HMAC-SHA1',\n    oauth_callback: callbackUrl,\n    oauth_timestamp: (Date.now() / 1000).toFixed(),\n    oauth_nonce: Math.random()\n      .toString(36)\n      .replace(/[^a-z]/, '')\n      .substr(2)\n  }\n\n  return makeSignature(params, method, apiUrl, consumerSecret)\n}\n\nexport const accessTokenSignature = ({\n  consumerKey,\n  consumerSecret,\n  oauthToken,\n  oauthVerifier,\n  method,\n  apiUrl\n}: {\n  method: string\n  apiUrl: string\n  consumerKey: string\n  consumerSecret: string\n  oauthToken: string\n  oauthVerifier: string\n}) => {\n  const params = {\n    oauth_consumer_key: consumerKey,\n    oauth_version: '1.0',\n    oauth_signature_method: 'HMAC-SHA1',\n    oauth_token: oauthToken,\n    oauth_verifier: oauthVerifier,\n    oauth_timestamp: (Date.now() / 1000).toFixed(),\n    oauth_nonce: Math.random()\n      .toString(36)\n      .replace(/[^a-z]/, '')\n      .substr(2)\n  }\n\n  return makeSignature(params, method, apiUrl, consumerSecret, oauthVerifier)\n}\n\nexport const profileSignature = ({\n  consumerKey,\n  consumerSecret,\n  oauthToken,\n  oauthTokenSecret,\n  method,\n  apiUrl\n}: {\n  method: string\n  apiUrl: string\n  consumerKey: string\n  consumerSecret: string\n  oauthToken: string\n  oauthTokenSecret: string\n}) => {\n  const params = {\n    oauth_consumer_key: consumerKey,\n    oauth_nonce: Math.random()\n      .toString(36)\n      .replace(/[^a-z]/, '')\n      .substr(2),\n    oauth_signature_method: 'HMAC-SHA1',\n    oauth_timestamp: (Date.now() / 1000).toFixed(),\n    oauth_token: oauthToken,\n    oauth_version: '1.0'\n  }\n\n  return makeSignature(params, method, apiUrl, consumerSecret, oauthTokenSecret)\n}\n\nconst makeSignature = (\n  params: any,\n  method: string,\n  apiUrl: string,\n  consumerSecret: string,\n  oauthSecret = ''\n) => {\n  const paramsBaseString = Object.keys(params)\n    .sort()\n    .reduce((prev: string, el: any) => {\n      return (prev += `&${el}=${params[el]}`)\n    }, '')\n    .substr(1)\n\n  const signatureBaseString = `${method.toUpperCase()}&${encodeURIComponent(\n    apiUrl\n  )}&${encodeURIComponent(paramsBaseString)}`\n\n  const signingKey = `${encodeURIComponent(\n    consumerSecret\n  )}&${encodeURIComponent(oauthSecret)}`\n\n  const oauthSignature = enc.Base64.stringify(\n    HmacSHA1(signatureBaseString, signingKey)\n  )\n\n  const paramsWithSignature = {\n    ...params,\n    oauth_signature: encodeURIComponent(oauthSignature)\n  }\n\n  return Object.keys(paramsWithSignature)\n    .sort()\n    .reduce((prev: string, el: any) => {\n      return (prev += `,${el}=\"${paramsWithSignature[el]}\"`)\n    }, '')\n    .substr(1)\n}\n\nexport const parseOAuthRequestToken = (responseText: string) =>\n  responseText.split('&').reduce((prev, el) => {\n    const [key, value] = el.split('=')\n    return { ...prev, [key]: value }\n  }, {} as RequestTokenResponse)\n","/* eslint-disable camelcase */\n/**\n *\n * LoginSocialGithub\n *\n */\nimport React, {\n  forwardRef,\n  memo,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useState\n} from 'react'\nimport { IResolveParams, objectType, TypeCrossFunction } from '..'\nimport {\n  profileSignature,\n  accessTokenSignature,\n  parseOAuthRequestToken,\n  requestTokenSignature\n} from '../helper/signature'\n\ninterface Props {\n  client_id: string\n  client_secret: string\n  className?: string\n  redirect_uri: string\n  children?: React.ReactNode\n  onLoginStart?: () => void\n  onLogoutSuccess?: () => void\n  onReject: (reject: string | objectType) => void\n  onResolve: ({ provider, data }: IResolveParams) => void\n}\n\nconst TWITTER_URL: string = 'https://api.twitter.com'\nconst PREVENT_CORS_URL: string = 'https://cors.bridged.cc'\n\nexport const LoginSocialTwitter = forwardRef(\n  (\n    {\n      client_id,\n      client_secret,\n      className = '',\n      redirect_uri,\n      children,\n      onLoginStart,\n      onLogoutSuccess,\n      onReject,\n      onResolve\n    }: Props,\n    ref: React.Ref<TypeCrossFunction>\n  ) => {\n    const [isLogged, setIsLogged] = useState(false)\n    const [isProcessing, setIsProcessing] = useState(false)\n\n    useEffect(() => {\n      const popupWindowURL = new URL(window.location.href)\n      const code = popupWindowURL.searchParams.get('oauth_verifier')\n      const state = popupWindowURL.searchParams.get('oauth_token')\n      if (state && code) {\n        localStorage.setItem('twitter', `${code}&${state}`)\n        window.close()\n      }\n    }, [])\n\n    const getProfile = useCallback(\n      (data) => {\n        const oauthSignature = profileSignature({\n          method: 'GET',\n          apiUrl: `${TWITTER_URL}/1.1/account/verify_credentials.json`,\n          consumerKey: client_id,\n          consumerSecret: client_secret,\n          oauthToken: data.oauth_token,\n          oauthTokenSecret: data.oauth_token_secret\n        })\n        const url = `${PREVENT_CORS_URL}/${TWITTER_URL}/1.1/account/verify_credentials.json`\n        fetch(url, {\n          method: 'GET',\n          headers: {\n            Authorization: `OAuth ${oauthSignature}`\n          }\n        })\n          .then((res) => res.json())\n          .then((res) => {\n            setIsLogged(true)\n            onResolve({ provider: 'twitter', data: { ...data, ...res } })\n            setIsProcessing(false)\n          })\n          .catch((err) => onReject(err))\n      },\n      [client_id, client_secret, onReject, onResolve]\n    )\n\n    const getAccessToken = useCallback(\n      async (code: string) => {\n        const authRes = code.split('&')\n        const oauthSignature = accessTokenSignature({\n          method: 'POST',\n          apiUrl: `${TWITTER_URL}/oauth/access_token`,\n          consumerKey: client_id,\n          consumerSecret: client_secret,\n          oauthToken: authRes[1],\n          oauthVerifier: authRes[0]\n        })\n        const requestOAuthURL = `${PREVENT_CORS_URL}/${TWITTER_URL}/oauth/access_token`\n        const data = await fetch(requestOAuthURL, {\n          method: 'POST',\n          headers: {\n            Authorization: `OAuth ${oauthSignature}`\n          }\n        })\n          .then((data) => data.text())\n          .then((data) => parseOAuthRequestToken(data))\n          .catch((err) => onReject(err))\n\n        data && getProfile(data)\n      },\n      [client_id, client_secret, getProfile, onReject]\n    )\n\n    const handlePostMessage = useCallback(\n      async ({ type, code, provider }) =>\n        type === 'code' &&\n        provider === 'twitter' &&\n        code &&\n        getAccessToken(code),\n      [getAccessToken]\n    )\n\n    const onChangeLocalStorage = useCallback(() => {\n      window.removeEventListener('storage', onChangeLocalStorage, false)\n      const code = localStorage.getItem('twitter')\n      if (code) {\n        setIsProcessing(true)\n        handlePostMessage({ provider: 'twitter', type: 'code', code })\n        localStorage.removeItem('twitter')\n      }\n    }, [handlePostMessage])\n\n    const onLogin = useCallback(async () => {\n      if (!isProcessing) {\n        onLoginStart && onLoginStart()\n        const oauthSignature = requestTokenSignature({\n          method: 'POST',\n          apiUrl: `${TWITTER_URL}/oauth/request_token`,\n          callbackUrl: redirect_uri,\n          consumerKey: client_id,\n          consumerSecret: client_secret\n        })\n        const requestOAuthURL = `${PREVENT_CORS_URL}/${TWITTER_URL}/oauth/request_token`\n        const data = await fetch(requestOAuthURL, {\n          method: 'POST',\n          headers: {\n            Authorization: `OAuth ${oauthSignature}`\n          }\n        })\n          .then((data) => data.text())\n          .catch((err) => onReject(err))\n\n        if (data) {\n          const result = parseOAuthRequestToken(data)\n\n          window.addEventListener('storage', onChangeLocalStorage, false)\n          const oauthUrl = `${TWITTER_URL}/oauth/authenticate?oauth_token=${result.oauth_token}`\n          const width = 450\n          const height = 730\n          const left = window.screen.width / 2 - width / 2\n          const top = window.screen.height / 2 - height / 2\n          window.open(\n            oauthUrl,\n            'twitter',\n            'menubar=no,location=no,resizable=no,scrollbars=no,status=no, width=' +\n              width +\n              ', height=' +\n              height +\n              ', top=' +\n              top +\n              ', left=' +\n              left\n          )\n        }\n      }\n    }, [\n      isProcessing,\n      onLoginStart,\n      redirect_uri,\n      client_id,\n      client_secret,\n      onReject,\n      onChangeLocalStorage\n    ])\n\n    useImperativeHandle(ref, () => ({\n      onLogout: () => {\n        if (isLogged) {\n          setIsLogged(false)\n          onLogoutSuccess && onLogoutSuccess()\n        } else {\n          console.log('You must login before logout.')\n        }\n      }\n    }))\n\n    return (\n      <div className={className} onClick={onLogin}>\n        {children}\n      </div>\n    )\n  }\n)\n\nexport default memo(LoginSocialTwitter)\n"],"names":["_window","window","LoginSocialAmazon","forwardRef","ref","state","client_id","className","redirect_uri","scope","scope_data","profile","essential","response_type","children","onReject","onResolve","onLogoutSuccess","onLoginStart","useState","isLogged","setIsLogged","isSdkLoaded","setIsSdkLoaded","isProcessing","setIsProcessing","useEffect","load","checkIsExistsSDKScript","useCallback","document","getElementById","insertScriptGoogle","d","s","id","jsSrc","cb","ggScriptTag","createElement","src","async","defer","scriptNode","getElementsByTagName","parentNode","insertBefore","onload","getUserInfo","res","fetch","headers","Authorization","access_token","then","data","json","provider","err","handleResponse","handleError","amazon","Login","setClientId","onLogin","authorize","error","useImperativeHandle","onLogout","logout","console","log","React","onClick","memo","LoginSocialFacebook","appId","xfbml","cookie","version","language","auth_type","fieldsProfile","return_scopes","insertSDKScript","fbScriptTag","initFbSDK","config","fbAsyncInit","FB","init","fbRoot","body","appendChild","getMe","authResponse","api","locale","fields","me","response","loginFB","login","LoginSocialGoogle","prompt","ux_mode","login_hint","access_type","onLogoutFailure","cookie_policy","hosted_domain","discoveryDocs","fetch_basic_profile","Object","values","filter","item","forEach","provider_id","entries","map","auth2","gapi","getAuthInstance","isSignedIn","get","currentUser","getBasicProfile","getId","name","getName","firstName","getGivenName","lastName","getFamilyName","avatar","getImageUrl","email","getEmail","params","immediate","gapiAuth","loginGoogle","signIn","signOut","LoginSocialGithub","client_secret","allow_signup","popupWindowURL","URL","location","href","code","searchParams","includes","localStorage","setItem","close","getProfile","PREVENT_CORS_URL","method","getAccessToken","Headers","Content-Type","URLSearchParams","text","p","handlePostMessage","type","onChangeLocalStorage","removeEventListener","getItem","removeItem","addEventListener","left","screen","width","top","height","open","GITHUB_URL","LoginSocialInstagram","grant_type","INSTAGRAM_URL","LoginSocialMicrosoft","tenant","response_mode","code_challenge","code_challenge_method","MICROSOFT_API_URL","code_verifier","MICROSOFT_URL","LoginSocialLinkedin","encodeURIComponent","LINKEDIN_API_URL","contents","JSON","parse","LINKEDIN_URL","LoginSocialPinterest","details","formBody","property","encodedKey","encodedValue","push","join","btoa","PINTEREST_URL","makeSignature","apiUrl","consumerSecret","oauthSecret","paramsBaseString","keys","sort","reduce","prev","el","substr","signatureBaseString","toUpperCase","signingKey","oauthSignature","enc","Base64","stringify","HmacSHA1","paramsWithSignature","oauth_signature","parseOAuthRequestToken","responseText","split","TWITTER_URL","LoginSocialTwitter","oauthToken","oauthTokenSecret","consumerKey","oauth_token","oauth_token_secret","oauth_consumer_key","oauth_nonce","Math","random","toString","replace","oauth_signature_method","oauth_timestamp","Date","now","toFixed","oauth_version","authRes","oauthVerifier","oauth_verifier","oauth_callback","callbackUrl","requestTokenSignature","result"],"mappings":"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"}